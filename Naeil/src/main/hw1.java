package main;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.security.MessageDigest;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.border.EmptyBorder;
import javax.swing.border.LineBorder;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

import user.sqlDAO2;

public class hw1 extends JFrame {

	private boolean isIdChecked = false;
	// ÌÅ¥ÎûòÏä§ ÌïÑÎìú
	private boolean isPwChecked = false;

	private LineBorder panel_bb = new LineBorder(Color.BLACK, 1, true);

	private JPanel contentPane;
	private JTextField textField_name;
	private JTextField textField_id;
	private JTextField textField_pw;
	private JTextField textField_pwc;
	private JTextField textField;
	private JTextField textField_010;
	private JTextField textField_email;

	private String name;
	private String id;
	private String pw;
	private String pwc;
	private String email;
	private String ph;

	private int type = 0;

	JRadioButton rdbtnuser = null;
	JRadioButton rdbtnbusiness = null;
	private JTextField textField_1234;
	private JTextField textField_5678;
	sqlDAO2 sqlDAO2 = new sqlDAO2();

	public void setDocumentFilter(JTextField textField, int maxLength, JTextField nextField) {
		Document doc = textField.getDocument();
		if (doc instanceof AbstractDocument) {
			((AbstractDocument) doc).setDocumentFilter(new DocumentFilter() {
				@Override
				public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
						throws BadLocationException {
					if (string != null && string.matches("[0-9]+")) {
						int currentLength = fb.getDocument().getLength();
						int newLength = currentLength + string.length();
						if (newLength <= maxLength) {
							super.insertString(fb, offset, string, attr);
							if (newLength == maxLength && nextField != null) {
								SwingUtilities.invokeLater(() -> nextField.requestFocusInWindow());
							}
						}
					}
				}

				@Override
				public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
						throws BadLocationException {
					if (text != null && text.matches("[0-9]+")) {
						int currentLength = fb.getDocument().getLength();
						int newLength = currentLength - length + text.length();
						if (newLength <= maxLength) {
							super.replace(fb, offset, length, text, attrs);
							if (newLength == maxLength && nextField != null) {
								SwingUtilities.invokeLater(() -> nextField.requestFocusInWindow());
							}
						}
					}
				}
			});
		}
	}

	// Ï†ÑÌôîÎ≤àÌò∏ ÏûÖÎ†• ÌïÑÌÑ∞ Ï†ÅÏö© (3ÏûêÎ¶¨, 4ÏûêÎ¶¨, 4ÏûêÎ¶¨)
	public class NumericFilter extends DocumentFilter {
		private int maxLength;

		public NumericFilter(int maxLength) {
			this.maxLength = maxLength;
		}

		@Override
		public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
				throws BadLocationException {
			if (string.matches("[0-9]*") && fb.getDocument().getLength() + string.length() <= maxLength) {
				super.insertString(fb, offset, string, attr);
			}
		}

		@Override
		public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
				throws BadLocationException {
			if (text.matches("[0-9]*") && fb.getDocument().getLength() + text.length() - length <= maxLength) {
				super.replace(fb, offset, length, text, attrs);
			}
		}
	}

	/**
	 * Launch the application.
	 * 
	 * @throws ClassNotFoundException
	 * @throws SQLException
	 */
	public static void main(String[] args) throws ClassNotFoundException, SQLException {

		EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				try {
					hw1 frame = new hw1();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});

	}

	/**
	 * Create the frame.
	 * 
	 * @throws ClassNotFoundException
	 */
	public hw1() throws ClassNotFoundException {

		String img_path = "/resources/log";

//		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setSize(846, 1011);
		contentPane = new JPanel();
		contentPane.setBackground(Color.WHITE);
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);

		// Î∞îÏù∏Îçî ÌÅ¥Î¶Ω ÏÇ¨ÏßÑ
		JLabel lblClipImg = new JLabel("");
		lblClipImg.setBounds(369, 0, 108, 163);
		contentPane.add(lblClipImg);
		lblClipImg.setIcon(new ImageIcon(Log.class.getResource(img_path + "/ugip2.png")));

		JPanel panel = new JPanel();
		panel.setBounds(113, 134, 615, 796);
		panel.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel.setBackground(Color.WHITE);
		contentPane.add(panel);
		panel.setLayout(null);

		JLabel lbllogo = new JLabel("ÎÇ¥Ïùº Î≠ê Î®πÏßÄ?");
		lbllogo.setIcon(new ImageIcon(hw1.class.getResource(img_path + "/logo_icon.png")));
		lbllogo.setForeground(Color.BLACK);
		lbllogo.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lbllogo.setBackground(Color.WHITE);
		lbllogo.setBounds(12, 10, 161, 44);
		panel.add(lbllogo);

		// ÌöåÏõêÍ∞ÄÏûÖ ÎùºÎ≤®
		JLabel lblsignin = new JLabel("ÌöåÏõêÍ∞ÄÏûÖ");
		lblsignin.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 25));
		lblsignin.setHorizontalAlignment(SwingConstants.CENTER);
		lblsignin.setBounds(197, 43, 226, 55);
		panel.add(lblsignin);

		// Í∞úÏù∏, ÏÇ¨ÏóÖÏûê ÎùºÎîîÏò§ Î≤ÑÌäº Ìå®ÎÑê
		JPanel radiopanel = new JPanel();
		radiopanel.setBackground(Color.WHITE);
		radiopanel.setLayout(null);
		radiopanel.setBounds(113, 102, 397, 55);
		panel.add(radiopanel);

		// ÎùºÎîîÏò§ Î≤ÑÌäº ÏÉùÏÑ±
		rdbtnuser = new JRadioButton("Í∞úÏù∏");
		rdbtnuser.setBackground(Color.WHITE);
		rdbtnuser.setBounds(8, 26, 121, 23);
		radiopanel.add(rdbtnuser);

		rdbtnbusiness = new JRadioButton("ÏÇ¨ÏóÖÏûê");
		rdbtnbusiness.setBackground(Color.WHITE);
		rdbtnbusiness.setBounds(133, 26, 121, 23);
		radiopanel.add(rdbtnbusiness);

		// ButtonGroup ÏÉùÏÑ± Î∞è ÎùºÎîîÏò§ Î≤ÑÌäº Í∑∏Î£πÏóê Ï∂îÍ∞Ä
		ButtonGroup group = new ButtonGroup();
		group.add(rdbtnuser);
		group.add(rdbtnbusiness);

		// ÏùºÎ∞òÏÇ¨Ïö©ÏûêÎäî type 2 / ÏÇ¨ÏóÖÏûêÎäî type 1
		rdbtnuser.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				type = 2;
				// System.out.println(type);
			}
		});
		rdbtnbusiness.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				type = 1;
				// System.out.println(type);
			}
		});

		// Ïù¥Î¶Ñ Ìå®ÎÑê
		JPanel namepanel = new JPanel();
		namepanel.setBackground(Color.WHITE);
		namepanel.setBounds(113, 167, 397, 81);
		panel.add(namepanel);
		namepanel.setLayout(null);

		JLabel lblname = new JLabel("*Ïù¥Î¶Ñ");
		lblname.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblname.setBounds(12, 10, 89, 29);
		namepanel.add(lblname);

		textField_name = new JTextField();
		textField_name.setBackground(Color.WHITE);
		textField_name.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		textField_name.setBounds(12, 39, 252, 32);
		namepanel.add(textField_name);
		textField_name.setColumns(10);

		JPanel idpanel = new JPanel();
		idpanel.setBackground(Color.WHITE);
		idpanel.setLayout(null);
		idpanel.setBounds(113, 258, 397, 81);
		panel.add(idpanel);

		JLabel lblid = new JLabel("*ÏïÑÏù¥Îîî");
		lblid.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblid.setBounds(12, 10, 89, 29);
		idpanel.add(lblid);

		textField_id = new JTextField();
		textField_id.setBackground(Color.WHITE);
		textField_id.setFont(new Font("Gulim", Font.PLAIN, 12));
		textField_id.setColumns(10);
		textField_id.setBounds(12, 40, 252, 32);
		idpanel.add(textField_id);

		JButton btnjungbok = new JButton("Ï§ëÎ≥µ ÌôïÏù∏");
		btnjungbok.setBackground(Color.WHITE);
		btnjungbok.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				String enteredID = textField_id.getText().trim();
				// ÏïÑÏù¥Îîî ÌïÑÎìúÍ∞Ä ÎπÑÏñ¥ÏûàÎäîÏßÄ ÌôïÏù∏
				if (enteredID.isEmpty()) {
					JOptionPane.showMessageDialog(null, "ÏïÑÏù¥ÎîîÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}

				// ÏûÑÏùòÏùò Ï§ëÎ≥µÎêú ID ÏòàÏãú

				try {
					if (sqlDAO2.idjungbok(enteredID) == 1) {
						JOptionPane.showMessageDialog(null, "Ïù¥ÎØ∏ ÏÇ¨Ïö© Ï§ëÏù∏ ÏïÑÏù¥ÎîîÏûÖÎãàÎã§. üò¢", "Ï§ëÎ≥µ ÌôïÏù∏",
								JOptionPane.WARNING_MESSAGE);
						isIdChecked = false; // Ï§ëÎ≥µÏù¥Î©¥ false
					} else {
						JOptionPane.showMessageDialog(null, "ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÏïÑÏù¥ÎîîÏûÖÎãàÎã§! üéâ", "Ï§ëÎ≥µ ÌôïÏù∏",
								JOptionPane.INFORMATION_MESSAGE);
						isIdChecked = true; // ÏÇ¨Ïö© Í∞ÄÎä•Ìï† Îïå true
					}
				} catch (ClassNotFoundException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});
		btnjungbok.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		btnjungbok.setBounds(276, 40, 89, 31);
		idpanel.add(btnjungbok);

		JPanel pwpanel = new JPanel();
		pwpanel.setBackground(Color.WHITE);
		pwpanel.setLayout(null);
		pwpanel.setBounds(113, 349, 397, 81);
		panel.add(pwpanel);

		JLabel lblNewLabel_2_1_1 = new JLabel("*ÎπÑÎ∞ÄÎ≤àÌò∏");
		lblNewLabel_2_1_1.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblNewLabel_2_1_1.setBounds(12, 10, 89, 29);
		pwpanel.add(lblNewLabel_2_1_1);

		textField_pw = new JPasswordField();
		textField_pw.setBackground(Color.WHITE);
		textField_pw.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		textField_pw.setColumns(10);
		textField_pw.setBounds(12, 39, 252, 32);
		pwpanel.add(textField_pw);

		JPanel pwcpanel = new JPanel();
		pwcpanel.setBackground(Color.WHITE);
		pwcpanel.setLayout(null);
		pwcpanel.setBounds(113, 440, 397, 81);
		panel.add(pwcpanel);

		JLabel lblpwc = new JLabel("*ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏");
		lblpwc.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblpwc.setBounds(12, 10, 100, 29);
		pwcpanel.add(lblpwc);

		textField_pwc = new JPasswordField();
		textField_pwc.setBackground(Color.WHITE);
		textField_pwc.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		textField_pwc.setColumns(10);
		textField_pwc.setBounds(12, 39, 252, 32);
		pwcpanel.add(textField_pwc);

		// Ìú¥ÎåÄÌè∞ Î≤àÌò∏
		JPanel phonenumberpanel = new JPanel();
		phonenumberpanel.setBackground(Color.WHITE);
		phonenumberpanel.setLayout(null);
		phonenumberpanel.setBounds(113, 531, 397, 81);
		panel.add(phonenumberpanel);

		JLabel lblph = new JLabel("*Ìú¥ÎåÄÌè∞ Î≤àÌò∏");
		lblph.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblph.setBounds(12, 10, 100, 29);
		phonenumberpanel.add(lblph);

		JLabel lblhi = new JLabel("-");
		lblhi.setHorizontalAlignment(SwingConstants.CENTER);
		lblhi.setBounds(88, 49, 57, 15);
		phonenumberpanel.add(lblhi);

		JLabel lblhi1 = new JLabel("-");
		lblhi1.setHorizontalAlignment(SwingConstants.CENTER);
		lblhi1.setBounds(246, 49, 57, 15);
		phonenumberpanel.add(lblhi1);

		textField_010 = new JTextField();
		textField_010.setBackground(Color.WHITE);
		textField_010.setBounds(12, 41, 70, 32);
		phonenumberpanel.add(textField_010);
		textField_010.setColumns(3);

		textField_1234 = new JTextField();
		textField_1234.setBackground(Color.WHITE);
		textField_1234.setColumns(4);
		textField_1234.setBounds(157, 41, 70, 32);
		phonenumberpanel.add(textField_1234);

		textField_5678 = new JTextField();
		textField_5678.setBackground(Color.WHITE);
		textField_5678.setColumns(4);
		textField_5678.setBounds(315, 41, 70, 32);
		phonenumberpanel.add(textField_5678);

		// Í∏ÄÏûêÏàò Ï†úÌïú + Ìè¨Ïª§Ïä§ Ïù¥Îèô ÏÑ§Ï†ï
		setDocumentWithLimit(textField_010, 3, textField_1234);
		setDocumentWithLimit(textField_1234, 4, textField_5678);
		setDocumentWithLimit(textField_5678, 4, null);

		// Ïù¥Î©îÏùº ÏûÖÎ†•
		JPanel emailpanel = new JPanel();
		emailpanel.setBackground(Color.WHITE);
		emailpanel.setLayout(null);
		emailpanel.setBounds(113, 622, 397, 81);
		panel.add(emailpanel);

		JLabel lblemail = new JLabel("*Ïù¥Î©îÏùº");
		lblemail.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.BOLD, 14));
		lblemail.setBounds(12, 10, 100, 29);
		emailpanel.add(lblemail);

		textField_email = new JTextField();
		textField_email.setBackground(Color.WHITE);
		textField_email.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		textField_email.setColumns(10);
		textField_email.setBounds(12, 39, 252, 32);
		emailpanel.add(textField_email);

		JButton btngaip = new JButton("Í∞ÄÏûÖÌïòÍ∏∞");
		btngaip.setBackground(Color.WHITE);
		btngaip.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
			}
		});

		// Í∞ÄÏûÖÌïòÍ∏∞ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
		btngaip.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				name = textField_name.getText();
				id = textField_id.getText();
				pw = textField_pw.getText();
				pwc = textField_pwc.getText();
				ph = textField_010.getText() + '-' + textField_1234.getText() + '-' + textField_5678.getText();
				email = textField_email.getText();

				// Ïù¥Î¶Ñ ÏûÖÎ†•Î∞õÏïòÎäîÏßÄ ÌôïÏù∏
				if (name.isEmpty()) {
					JOptionPane.showMessageDialog(null, "Ïù¥Î¶ÑÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}
				// Ïù¥Î¶Ñ: ÌïúÍ∏Ä ÏµúÏÜå 2Ïûê Ïù¥ÏÉÅ
				if (!name.matches("^[Í∞Ä-Ìû£]{2,}$")) {
					JOptionPane.showMessageDialog(null, "Ïù¥Î¶ÑÏùÄ ÌïúÍ∏Ä 2Ïûê Ïù¥ÏÉÅ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò",
							JOptionPane.WARNING_MESSAGE);
					return;
				}
				// ÏïÑÏù¥Îîî ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî
				if (id.isEmpty()) {
					JOptionPane.showMessageDialog(null, "ÏïÑÏù¥ÎîîÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}
				// ÏïÑÏù¥Îîî: ÏòÅÎ¨∏ ÎòêÎäî Ïà´Ïûê 4~12Ïûê
				if (!id.matches("^[a-zA-Z0-9]{4,12}$")) {
					JOptionPane.showMessageDialog(null, "ÏïÑÏù¥ÎîîÎäî ÏòÅÎ¨∏ ÎòêÎäî Ïà´ÏûêÎ°ú 4~12Ïûê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò",
							JOptionPane.WARNING_MESSAGE);
					return;
				}
				// ÎπÑÎ∞ÄÎ≤àÌò∏ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî
				if (pw.isEmpty()) {
					JOptionPane.showMessageDialog(null, "ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}
				// ÎπÑÎ∞ÄÎ≤àÌò∏: ÏòÅÎ¨∏ + Ïà´Ïûê Ìè¨Ìï®, 6Ïûê Ïù¥ÏÉÅ
				if (!pw.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$")) {
					JOptionPane.showMessageDialog(null, "ÎπÑÎ∞ÄÎ≤àÌò∏Îäî ÏòÅÎ¨∏Í≥º Ïà´ÏûêÎ•º Ìè¨Ìï®ÌïòÏó¨ 6Ïûê Ïù¥ÏÉÅÏù¥Ïñ¥Ïïº Ìï©ÎãàÎã§. üò¢", "ÏûÖÎ†• Ïò§Î•ò",
							JOptionPane.WARNING_MESSAGE);
					return;
				}
				// Ï†ÑÌôîÎ≤àÌò∏ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî
				if (ph.isEmpty()) {
					JOptionPane.showMessageDialog(null, "Ï†ÑÌôîÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;

				}
				// Ïù¥Î©îÏùº ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî
				if (email.isEmpty()) {
					JOptionPane.showMessageDialog(null, "Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}
				// Ïù¥Î©îÏùº: Í∏∞Î≥∏ Ïù¥Î©îÏùº ÌòïÏãù Ï≤¥ÌÅ¨
				if (!email.matches("^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,}$")) {
					JOptionPane.showMessageDialog(null, "Ïò¨Î∞îÎ•∏ Ïù¥Î©îÏùº ÌòïÏãùÏúºÎ°ú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò",
							JOptionPane.WARNING_MESSAGE);
					return;
				}
				// ÌöåÏõê Ïú†Ìòï ÏÑ†ÌÉù ÌôïÏù∏
				if (type == 0) {
					JOptionPane.showMessageDialog(null, "ÌöåÏõê Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				} // ÏïÑÏù¥Îîî Ï§ëÎ≥µ ÌôïÏù∏ ÌñàÎäîÏßÄ Í≤ÄÏÇ¨
				if (!isIdChecked) {
					JOptionPane.showMessageDialog(null, "ÏïÑÏù¥Îîî Ï§ëÎ≥µ ÌôïÏù∏ÏùÑ Ìï¥Ï£ºÏÑ∏Ïöî. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				} // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏
				if (!textField_pw.getText().equals(textField_pwc.getText())) {
					JOptionPane.showMessageDialog(null, "ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§. üò¢", "ÏûÖÎ†• Ïò§Î•ò", JOptionPane.WARNING_MESSAGE);
					return;
				}



				Connection con1 = null;
				try {
					Class.forName("oracle.jdbc.driver.OracleDriver"); // Ïò§ÎùºÌÅ¥ ÎìúÎùºÏù¥Î≤ÑÎ°úÎî©
					// Í∞ùÏ≤¥.Î©îÏÜåÎìú(), ÌÅ¥ÎûòÏä§Î™Ö.Ïä§ÌÉúÌã± Î©îÏÜåÎìú()
					// DB Ïó∞Í≤∞
					con1 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "hr", "hr");// Ï†ëÏÜç

					// String userType = rdbtnNewRadioButton.isSelected() ? "User" : "Admin";
					// SQL ÏøºÎ¶¨ ÏûëÏÑ±

					String sql = type == 1
							? "INSERT INTO users (users_signum, users_name, users_id, users_password, users_phone, users_email, users_type) VALUES (admin_signum_seq.NEXTVAL, ?, ?, ?, ?, ?, ?)"
							: "INSERT INTO users (users_signum, users_name, users_id, users_password, users_phone, users_email, users_type) VALUES (users_signum_seq.NEXTVAL, ?, ?, ?, ?, ?, ?)";

					PreparedStatement pstmt = con1.prepareStatement(sql);

					// ÏïîÌò∏Ìôî
					MessageDigest md = MessageDigest.getInstance("SHA-256");
					byte[] hashBytes = md.digest(pw.getBytes("UTF-8"));
					StringBuilder sb = new StringBuilder();
					for (byte b : hashBytes) {
						sb.append(String.format("%02x", b));
					}
					String newHashedPW = sb.toString();

					pstmt.setString(1, name);
					pstmt.setString(2, id);
					pstmt.setString(3, newHashedPW);
					pstmt.setString(4, ph);
					pstmt.setString(5, email);
					pstmt.setInt(6, type);

					// Ïã§Ìñâ
					pstmt.executeUpdate();

					// ÏûêÏõê Ï†ïÎ¶¨
					JOptionPane.showMessageDialog(null, "ÌöåÏõêÍ∞ÄÏûÖÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§! üéâ", "Í∞ÄÏûÖ ÏôÑÎ£å", JOptionPane.INFORMATION_MESSAGE);

					pstmt.close();
					con1.close();

					dispose();

				} catch (SQLException ex) {
					ex.printStackTrace();
					JOptionPane.showMessageDialog(null, "DB Ï†ÄÏû• Ï§ë Ïò§Î•ò Î∞úÏÉù!" + ex.getMessage());
				} catch (Exception e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});

		btngaip.setFont(new Font("ÎßëÏùÄ Í≥†Îîï", Font.PLAIN, 12));
		btngaip.setBounds(261, 713, 98, 36);
		panel.add(btngaip);

		JPanel panel_1 = new JPanel();
		panel_1.setBounds(43, 118, 755, 833);
		contentPane.add(panel_1);
		panel_1.setLayout(null);

	}

	// ÏûÖÎ†• Í∏ÄÏûêÏàò Ï†úÌïú Î∞è Îã§Ïùå ÌïÑÎìú Ìè¨Ïª§Ïä§ Ïù¥Îèô Ï≤òÎ¶¨
	private static void setDocumentWithLimit(JTextField field, int limit, JTextField nextField) {
		PlainDocument doc = new PlainDocument() {
			@Override
			public void insertString(int offs, String str, AttributeSet a) throws BadLocationException {
				if (str == null)
					return;
				if ((getLength() + str.length()) <= limit) {
					super.insertString(offs, str, a);
					if ((getLength()) == limit && nextField != null) {
						SwingUtilities.invokeLater(nextField::requestFocusInWindow);
					}
				}
			}
		};
		field.setDocument(doc);
	}
}
